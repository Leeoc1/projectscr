{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\cau\\\\Desktop\\\\Project\\\\projectscr\\\\src\\\\components\\\\moviepagecomponents\\\\Movies.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { boxofficeMovies, upcomingMovies } from \"../../Data/MoviesData.js\";\nimport MovieCard from \"./MovieCard\";\nimport \"../../componentcss/moviepagecomponentcss/Movies.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Movies = () => {\n  _s();\n  const [activeTab, setActiveTab] = useState(\"boxoffice\");\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"mvs-section\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mvs-tabs\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: `mvs-tab-button ${activeTab === \"boxoffice\" ? \"active\" : \"\"}`,\n        onClick: () => setActiveTab(\"boxoffice\"),\n        children: \"\\uBC15\\uC2A4\\uC624\\uD53C\\uC2A4\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 12,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: `mvs-tab-button ${activeTab === \"upcoming\" ? \"active\" : \"\"}`,\n        onClick: () => setActiveTab(\"upcoming\"),\n        children: \"\\uC0C1\\uC601\\uC608\\uC815\\uC791\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mvs-grid\",\n      children: activeTab === \"boxoffice\" ? boxofficeMovies.map(movie => /*#__PURE__*/_jsxDEV(MovieCard, {\n        movie: movie,\n        isBoxOffice: true\n      }, movie.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 15\n      }, this)) : upcomingMovies.map(movie => /*#__PURE__*/_jsxDEV(MovieCard, {\n        movie: movie,\n        isBoxOffice: false\n      }, movie.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 15\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 10,\n    columnNumber: 5\n  }, this);\n};\n_s(Movies, \"fKeYWi8rRLm0k44W2MFg9rHse4s=\");\n_c = Movies;\nexport default Movies;\nvar _c;\n$RefreshReg$(_c, \"Movies\");","map":{"version":3,"names":["React","useState","boxofficeMovies","upcomingMovies","MovieCard","jsxDEV","_jsxDEV","Movies","_s","activeTab","setActiveTab","className","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","map","movie","isBoxOffice","id","_c","$RefreshReg$"],"sources":["C:/Users/cau/Desktop/Project/projectscr/src/components/moviepagecomponents/Movies.jsx"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport { boxofficeMovies, upcomingMovies } from \"../../Data/MoviesData.js\";\r\nimport MovieCard from \"./MovieCard\";\r\nimport \"../../componentcss/moviepagecomponentcss/Movies.css\";\r\n\r\nconst Movies = () => {\r\n  const [activeTab, setActiveTab] = useState(\"boxoffice\");\r\n\r\n  return (\r\n    <div className=\"mvs-section\">\r\n      <div className=\"mvs-tabs\">\r\n        <button\r\n          className={`mvs-tab-button ${\r\n            activeTab === \"boxoffice\" ? \"active\" : \"\"\r\n          }`}\r\n          onClick={() => setActiveTab(\"boxoffice\")}\r\n        >\r\n          박스오피스\r\n        </button>\r\n        <button\r\n          className={`mvs-tab-button ${\r\n            activeTab === \"upcoming\" ? \"active\" : \"\"\r\n          }`}\r\n          onClick={() => setActiveTab(\"upcoming\")}\r\n        >\r\n          상영예정작\r\n        </button>\r\n      </div>\r\n      <div className=\"mvs-grid\">\r\n        {activeTab === \"boxoffice\"\r\n          ? boxofficeMovies.map((movie) => (\r\n              <MovieCard key={movie.id} movie={movie} isBoxOffice={true} />\r\n            ))\r\n          : upcomingMovies.map((movie) => (\r\n              <MovieCard key={movie.id} movie={movie} isBoxOffice={false} />\r\n            ))}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Movies;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,eAAe,EAAEC,cAAc,QAAQ,0BAA0B;AAC1E,OAAOC,SAAS,MAAM,aAAa;AACnC,OAAO,qDAAqD;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE7D,MAAMC,MAAM,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACnB,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGT,QAAQ,CAAC,WAAW,CAAC;EAEvD,oBACEK,OAAA;IAAKK,SAAS,EAAC,aAAa;IAAAC,QAAA,gBAC1BN,OAAA;MAAKK,SAAS,EAAC,UAAU;MAAAC,QAAA,gBACvBN,OAAA;QACEK,SAAS,EAAE,kBACTF,SAAS,KAAK,WAAW,GAAG,QAAQ,GAAG,EAAE,EACxC;QACHI,OAAO,EAAEA,CAAA,KAAMH,YAAY,CAAC,WAAW,CAAE;QAAAE,QAAA,EAC1C;MAED;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,eACTX,OAAA;QACEK,SAAS,EAAE,kBACTF,SAAS,KAAK,UAAU,GAAG,QAAQ,GAAG,EAAE,EACvC;QACHI,OAAO,EAAEA,CAAA,KAAMH,YAAY,CAAC,UAAU,CAAE;QAAAE,QAAA,EACzC;MAED;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACN,CAAC,eACNX,OAAA;MAAKK,SAAS,EAAC,UAAU;MAAAC,QAAA,EACtBH,SAAS,KAAK,WAAW,GACtBP,eAAe,CAACgB,GAAG,CAAEC,KAAK,iBACxBb,OAAA,CAACF,SAAS;QAAgBe,KAAK,EAAEA,KAAM;QAACC,WAAW,EAAE;MAAK,GAA1CD,KAAK,CAACE,EAAE;QAAAP,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAoC,CAC7D,CAAC,GACFd,cAAc,CAACe,GAAG,CAAEC,KAAK,iBACvBb,OAAA,CAACF,SAAS;QAAgBe,KAAK,EAAEA,KAAM;QAACC,WAAW,EAAE;MAAM,GAA3CD,KAAK,CAACE,EAAE;QAAAP,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAqC,CAC9D;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV,CAAC;AAACT,EAAA,CAlCID,MAAM;AAAAe,EAAA,GAANf,MAAM;AAoCZ,eAAeA,MAAM;AAAC,IAAAe,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}