{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\cau\\\\Desktop\\\\Project\\\\projectscr\\\\src\\\\pages\\\\reservation\\\\ReservationPlacePage.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { useLocation, useNavigate } from \"react-router-dom\";\nimport Header from \"../../pubcomponent/Header\";\nimport \"../../pagecss/reservation/ReservationPlacePage.css\";\n\n// mock 지역/지점/상영시간 데이터 (이미지와 동일하게 하드코딩)\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst theaterData = [{\n  region: \"서울\",\n  branches: [{\n    name: \"가양\",\n    screens: [{\n      type: \"2D\",\n      times: [{\n        time: \"15:05\",\n        seats: \"168 / 184\",\n        screen: \"6관\"\n      }, {\n        time: \"16:35\",\n        seats: \"328 / 332\",\n        screen: \"5관\"\n      }, {\n        time: \"18:10\",\n        seats: \"178 / 184\",\n        screen: \"6관\"\n      }, {\n        time: \"18:55\",\n        seats: \"129 / 132\",\n        screen: \"4관\"\n      }, {\n        time: \"19:40\",\n        seats: \"321 / 332\",\n        screen: \"5관\"\n      }, {\n        time: \"20:25\",\n        seats: \"128 / 142\",\n        screen: \"2관\"\n      }, {\n        time: \"21:15\",\n        seats: \"174 / 184\",\n        screen: \"6관\"\n      }, {\n        time: \"22:45\",\n        seats: \"332 / 332\",\n        screen: \"5관\"\n      }]\n    }]\n  }, {\n    name: \"강동\",\n    times: [\"11:00\", \"14:00\"]\n  }, {\n    name: \"건대입구\",\n    times: [\"09:30\", \"12:30\", \"18:00\"]\n  }, {\n    name: \"김포공항\",\n    times: [\"10:15\", \"13:45\"]\n  }, {\n    name: \"노원\",\n    times: [\"10:00\", \"13:00\"]\n  }, {\n    name: \"도곡\",\n    times: [\"11:00\", \"14:00\"]\n  }, {\n    name: \"독산\",\n    times: [\"09:30\", \"12:30\"]\n  }, {\n    name: \"서울대입구\",\n    times: [\"10:15\", \"13:45\"]\n  }, {\n    name: \"수락산\",\n    times: [\"10:00\", \"13:00\"]\n  }, {\n    name: \"수유\",\n    times: [\"11:00\", \"14:00\"]\n  }, {\n    name: \"신대방(구로디지털역)\",\n    times: [\"09:30\", \"12:30\"]\n  }, {\n    name: \"신도림\",\n    times: [\"10:15\", \"13:45\"]\n  }, {\n    name: \"신림\",\n    times: [\"10:00\", \"13:00\"]\n  }, {\n    name: \"에비뉴엘(명동)\",\n    times: [\"11:00\", \"14:00\"]\n  }, {\n    name: \"영등포\",\n    times: [\"09:30\", \"12:30\"]\n  }]\n}, {\n  region: \"경기/인천\",\n  branches: [{\n    name: \"고양\"\n  }, {\n    name: \"광명\"\n  }, {\n    name: \"구리\"\n  }, {\n    name: \"동수원\"\n  }, {\n    name: \"부천\"\n  }, {\n    name: \"수원\"\n  }, {\n    name: \"안산\"\n  }, {\n    name: \"인천\"\n  }, {\n    name: \"일산\"\n  }, {\n    name: \"파주\"\n  }, {\n    name: \"평택\"\n  }, {\n    name: \"하남\"\n  }]\n}, {\n  region: \"충청/대전\",\n  branches: [{\n    name: \"대전\"\n  }, {\n    name: \"천안\"\n  }, {\n    name: \"청주\"\n  }, {\n    name: \"충주\"\n  }]\n}, {\n  region: \"전라/광주\",\n  branches: [{\n    name: \"광주\"\n  }, {\n    name: \"목포\"\n  }, {\n    name: \"순천\"\n  }, {\n    name: \"여수\"\n  }]\n}, {\n  region: \"경북/대구\",\n  branches: [{\n    name: \"경산\"\n  }, {\n    name: \"구미\"\n  }, {\n    name: \"대구\"\n  }, {\n    name: \"포항\"\n  }]\n}, {\n  region: \"경남/부산/울산\",\n  branches: [{\n    name: \"김해\"\n  }, {\n    name: \"마산\"\n  }, {\n    name: \"부산\"\n  }, {\n    name: \"울산\"\n  }, {\n    name: \"창원\"\n  }]\n}, {\n  region: \"강원\",\n  branches: [{\n    name: \"강릉\"\n  }, {\n    name: \"원주\"\n  }, {\n    name: \"춘천\"\n  }]\n}, {\n  region: \"제주\",\n  branches: [{\n    name: \"제주\"\n  }]\n}];\n\n// 요일명과 색상 정보\nconst WEEKDAYS = [\"일\", \"월\", \"화\", \"수\", \"목\", \"금\", \"토\"];\n\n// 날짜 배열 생성 함수 (오늘 기준, 앞뒤로 이동 가능)\nfunction getDateArray(startDate, length = 8, today = new Date()) {\n  const arr = [];\n  for (let i = 0; i < length; i++) {\n    const date = new Date(startDate);\n    date.setDate(startDate.getDate() + i);\n    // 과거 날짜 비활성화\n    const isPast = date < new Date(today.getFullYear(), today.getMonth(), today.getDate());\n    arr.push({\n      date,\n      day: WEEKDAYS[date.getDay()],\n      isToday: i === 0 && date.getDate() === today.getDate(),\n      isTomorrow: i === 1 && date.getDate() === today.getDate() + 1,\n      isDayAfterTomorrow: i === 2 && date.getDate() === today.getDate() + 2,\n      isSaturday: date.getDay() === 6,\n      isSunday: date.getDay() === 0,\n      isDisabled: isPast\n    });\n  }\n  return arr;\n}\nconst ReservationPlacePage = () => {\n  _s();\n  var _location$state, _theaterData$find, _screens$;\n  const location = useLocation();\n  const navigate = useNavigate();\n  const selectedMovie = ((_location$state = location.state) === null || _location$state === void 0 ? void 0 : _location$state.selectedMovie) || {\n    title: \"F1 더 무비\",\n    grade: \"12\"\n  };\n\n  // 날짜 상태\n  const today = new Date();\n  const [offset, setOffset] = useState(0); // 화살표로 이동 시 offset 조정\n  const [selectedDateObj, setSelectedDateObj] = useState(new Date(today.getFullYear(), today.getMonth(), today.getDate())); // 오늘이 기본 선택\n\n  // 지역/지점 상태 (초기값: 선택 안함)\n  const [selectedRegion, setSelectedRegion] = useState(null);\n  const [selectedBranch, setSelectedBranch] = useState(null);\n  const [selectedTime, setSelectedTime] = useState(null);\n\n  // 선택된 지역의 지점 리스트\n  const branches = ((_theaterData$find = theaterData.find(r => r.region === selectedRegion)) === null || _theaterData$find === void 0 ? void 0 : _theaterData$find.branches) || [];\n\n  // 선택된 지점의 상영정보\n  const selectedBranchObj = branches.find(b => b.name === selectedBranch);\n  const screens = (selectedBranchObj === null || selectedBranchObj === void 0 ? void 0 : selectedBranchObj.screens) || [];\n\n  // offset만큼 이동한 날짜 배열 생성 (8개)\n  const baseDate = new Date(today);\n  baseDate.setDate(today.getDate() + offset);\n  const dateArr = getDateArray(baseDate, 8, today);\n\n  // 상단 날짜 표시 (오늘/내일/모레/요일)\n  const selectedDate = selectedDateObj;\n  const selectedDay = WEEKDAYS[selectedDate.getDay()];\n  let label = \"\";\n  // 오늘/내일/모레 판별\n  const diffDays = Math.floor((selectedDate - new Date(today.getFullYear(), today.getMonth(), today.getDate())) / (1000 * 60 * 60 * 24));\n  if (diffDays === 0) label = \"(오늘)\";else if (diffDays === 1) label = \"(내일)\";else if (diffDays === 2) label = \"(모레)\";else label = `(${selectedDay})`;\n  const headerText = `${selectedDate.getFullYear()}-${String(selectedDate.getMonth() + 1).padStart(2, \"0\")}-${String(selectedDate.getDate()).padStart(2, \"0\")}${label}`;\n\n  // 화살표: 오늘 이전으로 이동 불가\n  const canGoPrev = offset > 0;\n\n  // 날짜 비교 함수 (연,월,일만 비교)\n  function isSameDay(d1, d2) {\n    return d1.getFullYear() === d2.getFullYear() && d1.getMonth() === d2.getMonth() && d1.getDate() === d2.getDate();\n  }\n\n  // 선택 완료 여부 체크 (상영시간까지 선택된 경우)\n  const isReadyToSeat = selectedDate && selectedRegion && selectedBranch && selectedTime;\n\n  // 좌석 선택 버튼 클릭 시 이동\n  const handleGoToSeat = () => {\n    var _location$state2;\n    navigate(\"/reservation/seat\", {\n      state: {\n        selectedDate,\n        selectedRegion,\n        selectedBranch,\n        selectedTime,\n        selectedMovie: ((_location$state2 = location.state) === null || _location$state2 === void 0 ? void 0 : _location$state2.selectedMovie) || null\n      }\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"reservation-page\",\n    children: [/*#__PURE__*/_jsxDEV(Header, {\n      isOtherPage: true,\n      isScrolled: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 220,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"reservation-content\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"reservation-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"progress-bar\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"progress-steps\",\n            children: [\"날짜/극장\", \"인원/좌석\", \"결제\"].map((step, idx) => /*#__PURE__*/_jsxDEV(\"div\", {\n              className: `progress-step${idx === 0 ? \" active\" : \"\"}`,\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"step-number\",\n                children: idx + 1\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 231,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"step-title\",\n                children: step\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 232,\n                columnNumber: 19\n              }, this)]\n            }, step, true, {\n              fileName: _jsxFileName,\n              lineNumber: 227,\n              columnNumber: 17\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 225,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 224,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"date-selector-section\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"date-header\",\n            children: headerText\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 241,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"date-selector\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"date-list\",\n              children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"arrow\",\n                onClick: () => canGoPrev && setOffset(offset - 1),\n                disabled: !canGoPrev,\n                children: \"<\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 245,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"dates\",\n                children: dateArr.map((item, idx) => /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"date-item\" + (isSameDay(item.date, selectedDateObj) ? \" selected\" : \"\") + (item.isSaturday ? \" saturday\" : \"\") + (item.isSunday ? \" sunday\" : \"\") + (item.isDisabled ? \" disabled\" : \"\"),\n                  onClick: () => !item.isDisabled && setSelectedDateObj(new Date(item.date.getFullYear(), item.date.getMonth(), item.date.getDate())),\n                  children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"date-num\",\n                    children: item.date.getDate()\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 276,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"date-label\",\n                    children: (() => {\n                      // 오늘/내일/모레 판별 (리스트 내에서도)\n                      const diff = Math.floor((item.date - new Date(today.getFullYear(), today.getMonth(), today.getDate())) / (1000 * 60 * 60 * 24));\n                      if (diff === 0) return \"오늘\";\n                      if (diff === 1) return \"내일\";\n                      if (diff === 2) return \"모레\";\n                      return item.day;\n                    })()\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 277,\n                    columnNumber: 23\n                  }, this)]\n                }, idx, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 254,\n                  columnNumber: 21\n                }, this))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 252,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"arrow\",\n                onClick: () => setOffset(offset + 1),\n                children: \">\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 298,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 244,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 243,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 239,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"theater-section\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"theater-title section-title\",\n            children: \"\\uADF9\\uC7A5\\uC120\\uD0DD\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 308,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"time-title section-title\",\n            children: \"\\uC0C1\\uC601\\uC2DC\\uAC04\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 309,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"theater-selector\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"region-list\",\n              children: theaterData.map(region => /*#__PURE__*/_jsxDEV(\"button\", {\n                className: `region-btn${selectedRegion === region.region ? \" active\" : \"\"}`,\n                onClick: () => {\n                  setSelectedRegion(region.region);\n                  setSelectedBranch(null);\n                },\n                children: [region.region, /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"region-count\",\n                  children: [\"(\", region.branches.length, \")\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 325,\n                  columnNumber: 21\n                }, this)]\n              }, region.region, true, {\n                fileName: _jsxFileName,\n                lineNumber: 314,\n                columnNumber: 19\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 312,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"branch-list\",\n              children: branches.map(branch => /*#__PURE__*/_jsxDEV(\"button\", {\n                className: `branch-btn${selectedBranch === branch.name ? \" active\" : \"\"}`,\n                onClick: () => setSelectedBranch(branch.name),\n                children: branch.name\n              }, branch.name, false, {\n                fileName: _jsxFileName,\n                lineNumber: 334,\n                columnNumber: 19\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 332,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"time-list-area\",\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"time-list-content\",\n                children: [!selectedRegion && /*#__PURE__*/_jsxDEV(\"div\", {\n                  children: \"\\uC9C0\\uC5ED\\uC744 \\uBA3C\\uC800 \\uC120\\uD0DD\\uD558\\uC138\\uC694.\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 348,\n                  columnNumber: 39\n                }, this), selectedRegion && !selectedBranch && /*#__PURE__*/_jsxDEV(\"div\", {\n                  children: \"\\uC9C0\\uC810\\uC744 \\uC120\\uD0DD\\uD558\\uC138\\uC694.\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 350,\n                  columnNumber: 21\n                }, this), selectedRegion && selectedBranch && screens.length === 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n                  children: \"\\uC0C1\\uC601 \\uC815\\uBCF4\\uAC00 \\uC5C6\\uC2B5\\uB2C8\\uB2E4.\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 353,\n                  columnNumber: 21\n                }, this), selectedRegion && selectedBranch && screens.length > 0 && /*#__PURE__*/_jsxDEV(_Fragment, {\n                  children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"movie-info-box\",\n                    children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                      className: \"movie-grade\",\n                      children: selectedMovie.grade\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 359,\n                      columnNumber: 25\n                    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                      className: \"movie-title\",\n                      children: selectedMovie.title\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 362,\n                      columnNumber: 25\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 358,\n                    columnNumber: 23\n                  }, this), screens.map(screen => /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"screen-type-title\",\n                    children: screen.type\n                  }, screen.type, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 367,\n                    columnNumber: 25\n                  }, this)), /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"screen-times-grid\",\n                    children: (_screens$ = screens[0]) === null || _screens$ === void 0 ? void 0 : _screens$.times.map(item => /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: `screen-time-card${selectedTime === item.time ? \" active\" : \"\"}`,\n                      onClick: () => setSelectedTime(item.time),\n                      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                        className: \"screen-time-time\",\n                        children: item.time\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 380,\n                        columnNumber: 29\n                      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                        className: \"screen-time-seats\",\n                        children: item.seats\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 381,\n                        columnNumber: 29\n                      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                        className: \"screen-time-screen\",\n                        children: item.screen\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 384,\n                        columnNumber: 29\n                      }, this)]\n                    }, item.time, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 373,\n                      columnNumber: 27\n                    }, this))\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 371,\n                    columnNumber: 23\n                  }, this)]\n                }, void 0, true)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 347,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 346,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 310,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 306,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 222,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 221,\n      columnNumber: 7\n    }, this), isReadyToSeat && /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"reservation-seat-btn-fixed\",\n      onClick: handleGoToSeat,\n      children: \"\\uC88C\\uC11D \\uC120\\uD0DD\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 400,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 219,\n    columnNumber: 5\n  }, this);\n};\n_s(ReservationPlacePage, \"MuhV5uPGYVUaxeAD0avcj94+0Dk=\", false, function () {\n  return [useLocation, useNavigate];\n});\n_c = ReservationPlacePage;\nexport default ReservationPlacePage;\nvar _c;\n$RefreshReg$(_c, \"ReservationPlacePage\");","map":{"version":3,"names":["React","useState","useLocation","useNavigate","Header","jsxDEV","_jsxDEV","Fragment","_Fragment","theaterData","region","branches","name","screens","type","times","time","seats","screen","WEEKDAYS","getDateArray","startDate","length","today","Date","arr","i","date","setDate","getDate","isPast","getFullYear","getMonth","push","day","getDay","isToday","isTomorrow","isDayAfterTomorrow","isSaturday","isSunday","isDisabled","ReservationPlacePage","_s","_location$state","_theaterData$find","_screens$","location","navigate","selectedMovie","state","title","grade","offset","setOffset","selectedDateObj","setSelectedDateObj","selectedRegion","setSelectedRegion","selectedBranch","setSelectedBranch","selectedTime","setSelectedTime","find","r","selectedBranchObj","b","baseDate","dateArr","selectedDate","selectedDay","label","diffDays","Math","floor","headerText","String","padStart","canGoPrev","isSameDay","d1","d2","isReadyToSeat","handleGoToSeat","_location$state2","className","children","isOtherPage","isScrolled","fileName","_jsxFileName","lineNumber","columnNumber","map","step","idx","onClick","disabled","item","diff","branch","_c","$RefreshReg$"],"sources":["C:/Users/cau/Desktop/Project/projectscr/src/pages/reservation/ReservationPlacePage.jsx"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport { useLocation, useNavigate } from \"react-router-dom\";\r\nimport Header from \"../../pubcomponent/Header\";\r\nimport \"../../pagecss/reservation/ReservationPlacePage.css\";\r\n\r\n// mock 지역/지점/상영시간 데이터 (이미지와 동일하게 하드코딩)\r\nconst theaterData = [\r\n  {\r\n    region: \"서울\",\r\n    branches: [\r\n      {\r\n        name: \"가양\",\r\n        screens: [\r\n          {\r\n            type: \"2D\",\r\n            times: [\r\n              { time: \"15:05\", seats: \"168 / 184\", screen: \"6관\" },\r\n              { time: \"16:35\", seats: \"328 / 332\", screen: \"5관\" },\r\n              { time: \"18:10\", seats: \"178 / 184\", screen: \"6관\" },\r\n              { time: \"18:55\", seats: \"129 / 132\", screen: \"4관\" },\r\n              { time: \"19:40\", seats: \"321 / 332\", screen: \"5관\" },\r\n              { time: \"20:25\", seats: \"128 / 142\", screen: \"2관\" },\r\n              { time: \"21:15\", seats: \"174 / 184\", screen: \"6관\" },\r\n              { time: \"22:45\", seats: \"332 / 332\", screen: \"5관\" },\r\n            ],\r\n          },\r\n        ],\r\n      },\r\n      { name: \"강동\", times: [\"11:00\", \"14:00\"] },\r\n      { name: \"건대입구\", times: [\"09:30\", \"12:30\", \"18:00\"] },\r\n      { name: \"김포공항\", times: [\"10:15\", \"13:45\"] },\r\n      { name: \"노원\", times: [\"10:00\", \"13:00\"] },\r\n      { name: \"도곡\", times: [\"11:00\", \"14:00\"] },\r\n      { name: \"독산\", times: [\"09:30\", \"12:30\"] },\r\n      { name: \"서울대입구\", times: [\"10:15\", \"13:45\"] },\r\n      { name: \"수락산\", times: [\"10:00\", \"13:00\"] },\r\n      { name: \"수유\", times: [\"11:00\", \"14:00\"] },\r\n      { name: \"신대방(구로디지털역)\", times: [\"09:30\", \"12:30\"] },\r\n      { name: \"신도림\", times: [\"10:15\", \"13:45\"] },\r\n      { name: \"신림\", times: [\"10:00\", \"13:00\"] },\r\n      { name: \"에비뉴엘(명동)\", times: [\"11:00\", \"14:00\"] },\r\n      { name: \"영등포\", times: [\"09:30\", \"12:30\"] },\r\n    ],\r\n  },\r\n  {\r\n    region: \"경기/인천\",\r\n    branches: [\r\n      { name: \"고양\" },\r\n      { name: \"광명\" },\r\n      { name: \"구리\" },\r\n      { name: \"동수원\" },\r\n      { name: \"부천\" },\r\n      { name: \"수원\" },\r\n      { name: \"안산\" },\r\n      { name: \"인천\" },\r\n      { name: \"일산\" },\r\n      { name: \"파주\" },\r\n      { name: \"평택\" },\r\n      { name: \"하남\" },\r\n    ],\r\n  },\r\n  {\r\n    region: \"충청/대전\",\r\n    branches: [\r\n      { name: \"대전\" },\r\n      { name: \"천안\" },\r\n      { name: \"청주\" },\r\n      { name: \"충주\" },\r\n    ],\r\n  },\r\n  {\r\n    region: \"전라/광주\",\r\n    branches: [\r\n      { name: \"광주\" },\r\n      { name: \"목포\" },\r\n      { name: \"순천\" },\r\n      { name: \"여수\" },\r\n    ],\r\n  },\r\n  {\r\n    region: \"경북/대구\",\r\n    branches: [\r\n      { name: \"경산\" },\r\n      { name: \"구미\" },\r\n      { name: \"대구\" },\r\n      { name: \"포항\" },\r\n    ],\r\n  },\r\n  {\r\n    region: \"경남/부산/울산\",\r\n    branches: [\r\n      { name: \"김해\" },\r\n      { name: \"마산\" },\r\n      { name: \"부산\" },\r\n      { name: \"울산\" },\r\n      { name: \"창원\" },\r\n    ],\r\n  },\r\n  {\r\n    region: \"강원\",\r\n    branches: [{ name: \"강릉\" }, { name: \"원주\" }, { name: \"춘천\" }],\r\n  },\r\n  {\r\n    region: \"제주\",\r\n    branches: [{ name: \"제주\" }],\r\n  },\r\n];\r\n\r\n// 요일명과 색상 정보\r\nconst WEEKDAYS = [\"일\", \"월\", \"화\", \"수\", \"목\", \"금\", \"토\"];\r\n\r\n// 날짜 배열 생성 함수 (오늘 기준, 앞뒤로 이동 가능)\r\nfunction getDateArray(startDate, length = 8, today = new Date()) {\r\n  const arr = [];\r\n  for (let i = 0; i < length; i++) {\r\n    const date = new Date(startDate);\r\n    date.setDate(startDate.getDate() + i);\r\n    // 과거 날짜 비활성화\r\n    const isPast =\r\n      date < new Date(today.getFullYear(), today.getMonth(), today.getDate());\r\n    arr.push({\r\n      date,\r\n      day: WEEKDAYS[date.getDay()],\r\n      isToday: i === 0 && date.getDate() === today.getDate(),\r\n      isTomorrow: i === 1 && date.getDate() === today.getDate() + 1,\r\n      isDayAfterTomorrow: i === 2 && date.getDate() === today.getDate() + 2,\r\n      isSaturday: date.getDay() === 6,\r\n      isSunday: date.getDay() === 0,\r\n      isDisabled: isPast,\r\n    });\r\n  }\r\n  return arr;\r\n}\r\n\r\nconst ReservationPlacePage = () => {\r\n  const location = useLocation();\r\n  const navigate = useNavigate();\r\n  const selectedMovie = location.state?.selectedMovie || {\r\n    title: \"F1 더 무비\",\r\n    grade: \"12\",\r\n  };\r\n\r\n  // 날짜 상태\r\n  const today = new Date();\r\n  const [offset, setOffset] = useState(0); // 화살표로 이동 시 offset 조정\r\n  const [selectedDateObj, setSelectedDateObj] = useState(\r\n    new Date(today.getFullYear(), today.getMonth(), today.getDate())\r\n  ); // 오늘이 기본 선택\r\n\r\n  // 지역/지점 상태 (초기값: 선택 안함)\r\n  const [selectedRegion, setSelectedRegion] = useState(null);\r\n  const [selectedBranch, setSelectedBranch] = useState(null);\r\n  const [selectedTime, setSelectedTime] = useState(null);\r\n\r\n  // 선택된 지역의 지점 리스트\r\n  const branches =\r\n    theaterData.find((r) => r.region === selectedRegion)?.branches || [];\r\n\r\n  // 선택된 지점의 상영정보\r\n  const selectedBranchObj = branches.find((b) => b.name === selectedBranch);\r\n  const screens = selectedBranchObj?.screens || [];\r\n\r\n  // offset만큼 이동한 날짜 배열 생성 (8개)\r\n  const baseDate = new Date(today);\r\n  baseDate.setDate(today.getDate() + offset);\r\n  const dateArr = getDateArray(baseDate, 8, today);\r\n\r\n  // 상단 날짜 표시 (오늘/내일/모레/요일)\r\n  const selectedDate = selectedDateObj;\r\n  const selectedDay = WEEKDAYS[selectedDate.getDay()];\r\n  let label = \"\";\r\n  // 오늘/내일/모레 판별\r\n  const diffDays = Math.floor(\r\n    (selectedDate -\r\n      new Date(today.getFullYear(), today.getMonth(), today.getDate())) /\r\n      (1000 * 60 * 60 * 24)\r\n  );\r\n  if (diffDays === 0) label = \"(오늘)\";\r\n  else if (diffDays === 1) label = \"(내일)\";\r\n  else if (diffDays === 2) label = \"(모레)\";\r\n  else label = `(${selectedDay})`;\r\n  const headerText = `${selectedDate.getFullYear()}-${String(\r\n    selectedDate.getMonth() + 1\r\n  ).padStart(2, \"0\")}-${String(selectedDate.getDate()).padStart(\r\n    2,\r\n    \"0\"\r\n  )}${label}`;\r\n\r\n  // 화살표: 오늘 이전으로 이동 불가\r\n  const canGoPrev = offset > 0;\r\n\r\n  // 날짜 비교 함수 (연,월,일만 비교)\r\n  function isSameDay(d1, d2) {\r\n    return (\r\n      d1.getFullYear() === d2.getFullYear() &&\r\n      d1.getMonth() === d2.getMonth() &&\r\n      d1.getDate() === d2.getDate()\r\n    );\r\n  }\r\n\r\n  // 선택 완료 여부 체크 (상영시간까지 선택된 경우)\r\n  const isReadyToSeat =\r\n    selectedDate && selectedRegion && selectedBranch && selectedTime;\r\n\r\n  // 좌석 선택 버튼 클릭 시 이동\r\n  const handleGoToSeat = () => {\r\n    navigate(\"/reservation/seat\", {\r\n      state: {\r\n        selectedDate,\r\n        selectedRegion,\r\n        selectedBranch,\r\n        selectedTime,\r\n        selectedMovie: location.state?.selectedMovie || null,\r\n      },\r\n    });\r\n  };\r\n\r\n  return (\r\n    <div className=\"reservation-page\">\r\n      <Header isOtherPage={true} isScrolled={true} />\r\n      <div className=\"reservation-content\">\r\n        <div className=\"reservation-container\">\r\n          {/* 진행바 */}\r\n          <div className=\"progress-bar\">\r\n            <div className=\"progress-steps\">\r\n              {[\"날짜/극장\", \"인원/좌석\", \"결제\"].map((step, idx) => (\r\n                <div\r\n                  key={step}\r\n                  className={`progress-step${idx === 0 ? \" active\" : \"\"}`}\r\n                >\r\n                  <span className=\"step-number\">{idx + 1}</span>\r\n                  <span className=\"step-title\">{step}</span>\r\n                </div>\r\n              ))}\r\n            </div>\r\n          </div>\r\n\r\n          {/* 날짜/요일 선택 - 직접 구현 */}\r\n          <div className=\"date-selector-section\">\r\n            {/* 상단 날짜 헤더 */}\r\n            <div className=\"date-header\">{headerText}</div>\r\n            {/* 하단 날짜 선택 */}\r\n            <div className=\"date-selector\">\r\n              <div className=\"date-list\">\r\n                <button\r\n                  className=\"arrow\"\r\n                  onClick={() => canGoPrev && setOffset(offset - 1)}\r\n                  disabled={!canGoPrev}\r\n                >\r\n                  {\"<\"}\r\n                </button>\r\n                <div className=\"dates\">\r\n                  {dateArr.map((item, idx) => (\r\n                    <div\r\n                      key={idx}\r\n                      className={\r\n                        \"date-item\" +\r\n                        (isSameDay(item.date, selectedDateObj)\r\n                          ? \" selected\"\r\n                          : \"\") +\r\n                        (item.isSaturday ? \" saturday\" : \"\") +\r\n                        (item.isSunday ? \" sunday\" : \"\") +\r\n                        (item.isDisabled ? \" disabled\" : \"\")\r\n                      }\r\n                      onClick={() =>\r\n                        !item.isDisabled &&\r\n                        setSelectedDateObj(\r\n                          new Date(\r\n                            item.date.getFullYear(),\r\n                            item.date.getMonth(),\r\n                            item.date.getDate()\r\n                          )\r\n                        )\r\n                      }\r\n                    >\r\n                      <div className=\"date-num\">{item.date.getDate()}</div>\r\n                      <div className=\"date-label\">\r\n                        {(() => {\r\n                          // 오늘/내일/모레 판별 (리스트 내에서도)\r\n                          const diff = Math.floor(\r\n                            (item.date -\r\n                              new Date(\r\n                                today.getFullYear(),\r\n                                today.getMonth(),\r\n                                today.getDate()\r\n                              )) /\r\n                              (1000 * 60 * 60 * 24)\r\n                          );\r\n                          if (diff === 0) return \"오늘\";\r\n                          if (diff === 1) return \"내일\";\r\n                          if (diff === 2) return \"모레\";\r\n                          return item.day;\r\n                        })()}\r\n                      </div>\r\n                    </div>\r\n                  ))}\r\n                </div>\r\n                <button className=\"arrow\" onClick={() => setOffset(offset + 1)}>\r\n                  {\">\"}\r\n                </button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n          {/* 극장선택과 상영시간 선택 */}\r\n          <div className=\"theater-section\">\r\n            {/* 상단 타이틀들 */}\r\n            <div className=\"theater-title section-title\">극장선택</div>\r\n            <div className=\"time-title section-title\">상영시간</div>\r\n            <div className=\"theater-selector\">\r\n              {/* 지역 리스트 */}\r\n              <div className=\"region-list\">\r\n                {theaterData.map((region) => (\r\n                  <button\r\n                    key={region.region}\r\n                    className={`region-btn${\r\n                      selectedRegion === region.region ? \" active\" : \"\"\r\n                    }`}\r\n                    onClick={() => {\r\n                      setSelectedRegion(region.region);\r\n                      setSelectedBranch(null);\r\n                    }}\r\n                  >\r\n                    {region.region}\r\n                    <span className=\"region-count\">\r\n                      ({region.branches.length})\r\n                    </span>\r\n                  </button>\r\n                ))}\r\n              </div>\r\n              {/* 지점 리스트 */}\r\n              <div className=\"branch-list\">\r\n                {branches.map((branch) => (\r\n                  <button\r\n                    key={branch.name}\r\n                    className={`branch-btn${\r\n                      selectedBranch === branch.name ? \" active\" : \"\"\r\n                    }`}\r\n                    onClick={() => setSelectedBranch(branch.name)}\r\n                  >\r\n                    {branch.name}\r\n                  </button>\r\n                ))}\r\n              </div>\r\n              {/* 상영시간 리스트 */}\r\n              <div className=\"time-list-area\">\r\n                <div className=\"time-list-content\">\r\n                  {!selectedRegion && <div>지역을 먼저 선택하세요.</div>}\r\n                  {selectedRegion && !selectedBranch && (\r\n                    <div>지점을 선택하세요.</div>\r\n                  )}\r\n                  {selectedRegion && selectedBranch && screens.length === 0 && (\r\n                    <div>상영 정보가 없습니다.</div>\r\n                  )}\r\n                  {selectedRegion && selectedBranch && screens.length > 0 && (\r\n                    <>\r\n                      {/* 영화 등급, 제목, 상영관 타입 */}\r\n                      <div className=\"movie-info-box\">\r\n                        <span className=\"movie-grade\">\r\n                          {selectedMovie.grade}\r\n                        </span>\r\n                        <span className=\"movie-title\">\r\n                          {selectedMovie.title}\r\n                        </span>\r\n                      </div>\r\n                      {screens.map((screen) => (\r\n                        <div key={screen.type} className=\"screen-type-title\">\r\n                          {screen.type}\r\n                        </div>\r\n                      ))}\r\n                      <div className=\"screen-times-grid\">\r\n                        {screens[0]?.times.map((item) => (\r\n                          <div\r\n                            className={`screen-time-card${\r\n                              selectedTime === item.time ? \" active\" : \"\"\r\n                            }`}\r\n                            key={item.time}\r\n                            onClick={() => setSelectedTime(item.time)}\r\n                          >\r\n                            <div className=\"screen-time-time\">{item.time}</div>\r\n                            <div className=\"screen-time-seats\">\r\n                              {item.seats}\r\n                            </div>\r\n                            <div className=\"screen-time-screen\">\r\n                              {item.screen}\r\n                            </div>\r\n                          </div>\r\n                        ))}\r\n                      </div>\r\n                    </>\r\n                  )}\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      {/* 우측 하단 고정 좌석 선택 버튼 */}\r\n      {isReadyToSeat && (\r\n        <button className=\"reservation-seat-btn-fixed\" onClick={handleGoToSeat}>\r\n          좌석 선택\r\n        </button>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ReservationPlacePage;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}